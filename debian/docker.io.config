#/bin/sh

### sergiodj: Hm, it seems like you will need to revert this change,
### unfortunately.  I know I told you that using a config file is the
### proper way to interact with debconf (and it is!), but in this
### particular case it's actually getting in the way.  Let me explain.
###
### When a package is installed in the system, dpkg-preconfigure
### (*not* dpkg-reconfigure) is invoked.  If the package has debconf
### templates *and* a .config file, then dpkg-preconfigure executes
### the .config script which ultimately asks the debconf questions to
### the user.  Then, later in the installation process, when the
### postinst script is executed, the config script is once again
### invoked.  You might think "wait, won't that mean that the user
### will get asked the same question(s) twice?!", and you would be
### right!  That's one of the reasons why debconf keeps track of
### whether the questions have been asked already (the "seen" flag in
### the database).
###
### docker.io manipulates this "seen" flag (see the "db_fset" call
### below) in order to make sure that the user will always get asked
### the restart question during package upgrades.  If you put this
### code inside the postinst script and get rid of the config script
### (like it was before), then the question only gets asked once
### because dpkg-preconfigure won't find a config script and won't
### invoke debconf.  But if you move this code into a proper config
### script, the question gets asked twice during upgrades/reinstalls.
###
### I spent some time trying to find the right incantation to make
### sure that the question only gets asked once, but as far as I could
### find there's no way to know whether the config script is being
### executed during dpkg-preconfigure or during the postinst phase (if
### there was, then I guess debconf would probably use it instead of
### implementing its own deduplication mechanism).  So, in the
### interest of making progress here, my suggestion is to revert this
### change and put this code back into the postint script, ideally
### with a comment on top explaining why it is there and not in a
### config script.  You can also override the lintian warning, as we
### discussed previously.

set -e

. /usr/share/debconf/confmodule

# restart Docker if it's running (thus this is an upgrade) and the user (via debconf) tells us they're OK with that
db_version 2.0
db_fset docker.io/restart seen false
if [ -n "$2" ] && [ "$1" = 'configure' ] && {
	# either:
	#   - we're doing "dpkg-reconfigure" (and thus need to "db_input" to make sure users can change their answer between installs/upgrades)
	#   - we're doing install/upgrade and Docker is running (and thus it matters whether or not the user wants us to restart Docker for them)
	[ -n "${DEBCONF_RECONFIGURE:-}" ] \
	|| invoke-rc.d --disclose-deny docker status > /dev/null 2>&1
}; then
	db_input high docker.io/restart || true
	db_go || true
fi
db_stop
