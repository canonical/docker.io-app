.nh
.TH "DOCKER" "1" "Feb 2025" "Docker Community" "Docker User Manuals"

.SH NAME
docker-container-kill - Kill one or more running containers


.SH SYNOPSIS
\fBdocker container kill [OPTIONS] CONTAINER [CONTAINER...]\fP


.SH DESCRIPTION
The \fBdocker kill\fR subcommand kills one or more containers. The main process
inside the container is sent \fBSIGKILL\fR signal (default), or the signal that is
specified with the \fB--signal\fR option. You can reference a container by its
ID, ID-prefix, or name.

.PP
The \fB--signal\fR flag sets the system call signal that is sent to the container.
This signal can be a signal name in the format \fBSIG<NAME>\fR, for instance \fBSIGINT\fR,
or an unsigned number that matches a position in the kernel's syscall table,
for instance \fB2\fR\&.

.PP
While the default (\fBSIGKILL\fR) signal will terminate the container, the signal
set through \fB--signal\fR may be non-terminal, depending on the container's main
process. For example, the \fBSIGHUP\fR signal in most cases will be non-terminal,
and the container will continue running after receiving the signal.

.PP
.RS

.PP
\fBNote\fP

.PP
\fBENTRYPOINT\fR and \fBCMD\fR in the \fIshell\fP form run as a child process of
\fB/bin/sh -c\fR, which does not pass signals. This means that the executable is
not the containerâ€™s PID 1 and does not receive Unix signals.

.RE


.SH OPTIONS
\fB-h\fP, \fB--help\fP[=false]
	help for kill

.PP
\fB-s\fP, \fB--signal\fP=""
	Signal to send to the container


.SH SEE ALSO
\fBdocker-container(1)\fP
